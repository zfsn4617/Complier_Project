Terminals unused in grammar

   BOOL
   ELSE
   LSQUBR
   RSQUBR
   COMMA
   PLUS
   BREAK
   CASE
   CONST
   CONTINUE
   DEFAULT
   DELETE
   DO
   ENUM
   FALSE
   NEW
   NULLPTR
   STRUCT
   SWITCH
   TRUE
   UNION
   VOID


语法

    0 $accept: program $end

    1 program: statements

    2 block: LBRACE statements RBRACE

    3 statements: statement
    4           | statements statement

    5 statement: SEMICOLON
    6          | declaration SEMICOLON
    7          | assign_expr SEMICOLON
    8          | expr SEMICOLON
    9          | if_stmt
   10          | for_stmt
   11          | while_stmt
   12          | return_stmt
   13          | block

   14 declaration: T IDENTIFIER ASSIGN expr
   15            | T IDENTIFIER

   16 T: T_INT
   17  | T_CHAR
   18  | T_BOOL

   19 expr: IDENTIFIER
   20     | INTEGER
   21     | CHAR
   22     | STRING
   23     | expr ADD expr
   24     | expr SUB expr
   25     | expr MUL expr
   26     | expr DIV expr
   27     | expr REM expr
   28     | expr EQ expr
   29     | expr NE expr
   30     | expr LE expr
   31     | expr GE expr
   32     | expr LT expr
   33     | expr GT expr
   34     | expr AND expr
   35     | expr OR expr
   36     | NOT expr
   37     | SUB expr
   38     | ADD expr

   39 left_val: IDENTIFIER

   40 assign_expr: left_val ASSIGN expr

   41 if_stmt: IF LPAREN expr RPAREN statement

   42 for_stmt: FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statement

   43 while_stmt: WHILE LPAREN expr RPAREN statement

   44 return_stmt: RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 17
T_BOOL (259) 18
T_INT (260) 16
IDENTIFIER (261) 14 15 19 39
INTEGER (262) 20
CHAR (263) 21
BOOL (264)
STRING (265) 22
IF (266) 41
ELSE (267)
LPAREN (268) 41 42 43
RPAREN (269) 41 42 43
LBRACE (270) 2
RBRACE (271) 2
LSQUBR (272)
RSQUBR (273)
SEMICOLON (274) 5 6 7 8 42 44
COMMA (275)
EQ (276) 28
NE (277) 29
GE (278) 31
LE (279) 30
GT (280) 33
LT (281) 32
ASSIGN (282) 14 40
PLUS (283)
SUB (284) 24 37
MUL (285) 25
DIV (286) 26
REM (287) 27
WHILE (288) 43
FOR (289) 42
RETURN (290) 44
BREAK (291)
CASE (292)
CONST (293)
CONTINUE (294)
DEFAULT (295)
DELETE (296)
DO (297)
ENUM (298)
FALSE (299)
NEW (300)
NULLPTR (301)
STRUCT (302)
SWITCH (303)
TRUE (304)
UNION (305)
VOID (306)
OR (307) 35
AND (308) 34
ADD (309) 23 38
NOT (310) 36


Nonterminals, with rules where they appear

$accept (56)
    左： 0
program (57)
    左： 1, 右： 0
block (58)
    左： 2, 右： 13
statements (59)
    左： 3 4, 右： 1 2 4
statement (60)
    左： 5 6 7 8 9 10 11 12 13, 右： 3 4 41 42 43
declaration (61)
    左： 14 15, 右： 6
T (62)
    左： 16 17 18, 右： 14 15
expr (63)
    左： 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
    38, 右： 8 14 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
    40 41 42 43
left_val (64)
    左： 39, 右： 40
assign_expr (65)
    左： 40, 右： 7
if_stmt (66)
    左： 41, 右： 9
for_stmt (67)
    左： 42, 右： 10
while_stmt (68)
    左： 43, 右： 11
return_stmt (69)
    左： 44, 右： 12


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_INT       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    IF          shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    SUB         shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    program      转到状态 17
    block        转到状态 18
    statements   转到状态 19
    statement    转到状态 20
    declaration  转到状态 21
    T            转到状态 22
    expr         转到状态 23
    left_val     转到状态 24
    assign_expr  转到状态 25
    if_stmt      转到状态 26
    for_stmt     转到状态 27
    while_stmt   转到状态 28
    return_stmt  转到状态 29


State 1

   17 T: T_CHAR .

    $default  reduce using rule 17 (T)


State 2

   18 T: T_BOOL .

    $default  reduce using rule 18 (T)


State 3

   16 T: T_INT .

    $default  reduce using rule 16 (T)


State 4

   19 expr: IDENTIFIER .
   39 left_val: IDENTIFIER .

    ASSIGN    reduce using rule 39 (left_val)
    $default  reduce using rule 19 (expr)


State 5

   20 expr: INTEGER .

    $default  reduce using rule 20 (expr)


State 6

   21 expr: CHAR .

    $default  reduce using rule 21 (expr)


State 7

   22 expr: STRING .

    $default  reduce using rule 22 (expr)


State 8

   41 if_stmt: IF . LPAREN expr RPAREN statement

    LPAREN  shift, and go to state 30


State 9

    2 block: LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_INT       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    IF          shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    SUB         shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    block        转到状态 18
    statements   转到状态 31
    statement    转到状态 20
    declaration  转到状态 21
    T            转到状态 22
    expr         转到状态 23
    left_val     转到状态 24
    assign_expr  转到状态 25
    if_stmt      转到状态 26
    for_stmt     转到状态 27
    while_stmt   转到状态 28
    return_stmt  转到状态 29


State 10

    5 statement: SEMICOLON .

    $default  reduce using rule 5 (statement)


State 11

   37 expr: SUB . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 33


State 12

   43 while_stmt: WHILE . LPAREN expr RPAREN statement

    LPAREN  shift, and go to state 34


State 13

   42 for_stmt: FOR . LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statement

    LPAREN  shift, and go to state 35


State 14

   44 return_stmt: RETURN . SEMICOLON

    SEMICOLON  shift, and go to state 36


State 15

   38 expr: ADD . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 37


State 16

   36 expr: NOT . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 38


State 17

    0 $accept: program . $end

    $end  shift, and go to state 39


State 18

   13 statement: block .

    $default  reduce using rule 13 (statement)


State 19

    1 program: statements .
    4 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_INT       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    IF          shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    SUB         shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    $default  reduce using rule 1 (program)

    block        转到状态 18
    statement    转到状态 40
    declaration  转到状态 21
    T            转到状态 22
    expr         转到状态 23
    left_val     转到状态 24
    assign_expr  转到状态 25
    if_stmt      转到状态 26
    for_stmt     转到状态 27
    while_stmt   转到状态 28
    return_stmt  转到状态 29


State 20

    3 statements: statement .

    $default  reduce using rule 3 (statements)


State 21

    6 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 41


State 22

   14 declaration: T . IDENTIFIER ASSIGN expr
   15            | T . IDENTIFIER

    IDENTIFIER  shift, and go to state 42


State 23

    8 statement: expr . SEMICOLON
   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr

    SEMICOLON  shift, and go to state 43
    EQ         shift, and go to state 44
    NE         shift, and go to state 45
    GE         shift, and go to state 46
    LE         shift, and go to state 47
    GT         shift, and go to state 48
    LT         shift, and go to state 49
    SUB        shift, and go to state 50
    MUL        shift, and go to state 51
    DIV        shift, and go to state 52
    REM        shift, and go to state 53
    OR         shift, and go to state 54
    AND        shift, and go to state 55
    ADD        shift, and go to state 56


State 24

   40 assign_expr: left_val . ASSIGN expr

    ASSIGN  shift, and go to state 57


State 25

    7 statement: assign_expr . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 26

    9 statement: if_stmt .

    $default  reduce using rule 9 (statement)


State 27

   10 statement: for_stmt .

    $default  reduce using rule 10 (statement)


State 28

   11 statement: while_stmt .

    $default  reduce using rule 11 (statement)


State 29

   12 statement: return_stmt .

    $default  reduce using rule 12 (statement)


State 30

   41 if_stmt: IF LPAREN . expr RPAREN statement

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 59


State 31

    2 block: LBRACE statements . RBRACE
    4 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_INT       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    IF          shift, and go to state 8
    LBRACE      shift, and go to state 9
    RBRACE      shift, and go to state 60
    SEMICOLON   shift, and go to state 10
    SUB         shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    block        转到状态 18
    statement    转到状态 40
    declaration  转到状态 21
    T            转到状态 22
    expr         转到状态 23
    left_val     转到状态 24
    assign_expr  转到状态 25
    if_stmt      转到状态 26
    for_stmt     转到状态 27
    while_stmt   转到状态 28
    return_stmt  转到状态 29


State 32

   19 expr: IDENTIFIER .

    $default  reduce using rule 19 (expr)


State 33

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr
   37     | SUB expr .

    MUL  shift, and go to state 51
    DIV  shift, and go to state 52
    REM  shift, and go to state 53

    $default  reduce using rule 37 (expr)


State 34

   43 while_stmt: WHILE LPAREN . expr RPAREN statement

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 61


State 35

   42 for_stmt: FOR LPAREN . expr SEMICOLON expr SEMICOLON expr RPAREN statement

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 62


State 36

   44 return_stmt: RETURN SEMICOLON .

    $default  reduce using rule 44 (return_stmt)


State 37

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr
   38     | ADD expr .

    MUL  shift, and go to state 51
    DIV  shift, and go to state 52
    REM  shift, and go to state 53

    $default  reduce using rule 38 (expr)


State 38

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | NOT expr .

    $default  reduce using rule 36 (expr)


State 39

    0 $accept: program $end .

    $default  接受


State 40

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)


State 41

    6 statement: declaration SEMICOLON .

    $default  reduce using rule 6 (statement)


State 42

   14 declaration: T IDENTIFIER . ASSIGN expr
   15            | T IDENTIFIER .

    ASSIGN  shift, and go to state 63

    $default  reduce using rule 15 (declaration)


State 43

    8 statement: expr SEMICOLON .

    $default  reduce using rule 8 (statement)


State 44

   28 expr: expr EQ . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 64


State 45

   29 expr: expr NE . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 65


State 46

   31 expr: expr GE . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 66


State 47

   30 expr: expr LE . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 67


State 48

   33 expr: expr GT . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 68


State 49

   32 expr: expr LT . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 69


State 50

   24 expr: expr SUB . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 70


State 51

   25 expr: expr MUL . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 71


State 52

   26 expr: expr DIV . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 72


State 53

   27 expr: expr REM . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 73


State 54

   35 expr: expr OR . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 74


State 55

   34 expr: expr AND . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 75


State 56

   23 expr: expr ADD . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 76


State 57

   40 assign_expr: left_val ASSIGN . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 77


State 58

    7 statement: assign_expr SEMICOLON .

    $default  reduce using rule 7 (statement)


State 59

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr
   41 if_stmt: IF LPAREN expr . RPAREN statement

    RPAREN  shift, and go to state 78
    EQ      shift, and go to state 44
    NE      shift, and go to state 45
    GE      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    LT      shift, and go to state 49
    SUB     shift, and go to state 50
    MUL     shift, and go to state 51
    DIV     shift, and go to state 52
    REM     shift, and go to state 53
    OR      shift, and go to state 54
    AND     shift, and go to state 55
    ADD     shift, and go to state 56


State 60

    2 block: LBRACE statements RBRACE .

    $default  reduce using rule 2 (block)


State 61

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr
   43 while_stmt: WHILE LPAREN expr . RPAREN statement

    RPAREN  shift, and go to state 79
    EQ      shift, and go to state 44
    NE      shift, and go to state 45
    GE      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    LT      shift, and go to state 49
    SUB     shift, and go to state 50
    MUL     shift, and go to state 51
    DIV     shift, and go to state 52
    REM     shift, and go to state 53
    OR      shift, and go to state 54
    AND     shift, and go to state 55
    ADD     shift, and go to state 56


State 62

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr
   42 for_stmt: FOR LPAREN expr . SEMICOLON expr SEMICOLON expr RPAREN statement

    SEMICOLON  shift, and go to state 80
    EQ         shift, and go to state 44
    NE         shift, and go to state 45
    GE         shift, and go to state 46
    LE         shift, and go to state 47
    GT         shift, and go to state 48
    LT         shift, and go to state 49
    SUB        shift, and go to state 50
    MUL        shift, and go to state 51
    DIV        shift, and go to state 52
    REM        shift, and go to state 53
    OR         shift, and go to state 54
    AND        shift, and go to state 55
    ADD        shift, and go to state 56


State 63

   14 declaration: T IDENTIFIER ASSIGN . expr

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 81


State 64

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   28     | expr EQ expr .
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr

    SUB  shift, and go to state 50
    MUL  shift, and go to state 51
    DIV  shift, and go to state 52
    REM  shift, and go to state 53
    ADD  shift, and go to state 56

    $default  reduce using rule 28 (expr)


State 65

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   29     | expr NE expr .
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr

    SUB  shift, and go to state 50
    MUL  shift, and go to state 51
    DIV  shift, and go to state 52
    REM  shift, and go to state 53
    ADD  shift, and go to state 56

    $default  reduce using rule 29 (expr)


State 66

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   31     | expr GE expr .
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr

    SUB  shift, and go to state 50
    MUL  shift, and go to state 51
    DIV  shift, and go to state 52
    REM  shift, and go to state 53
    ADD  shift, and go to state 56

    $default  reduce using rule 31 (expr)


State 67

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   30     | expr LE expr .
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr

    SUB  shift, and go to state 50
    MUL  shift, and go to state 51
    DIV  shift, and go to state 52
    REM  shift, and go to state 53
    ADD  shift, and go to state 56

    $default  reduce using rule 30 (expr)


State 68

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   33     | expr GT expr .
   34     | expr . AND expr
   35     | expr . OR expr

    SUB  shift, and go to state 50
    MUL  shift, and go to state 51
    DIV  shift, and go to state 52
    REM  shift, and go to state 53
    ADD  shift, and go to state 56

    $default  reduce using rule 33 (expr)


State 69

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   32     | expr LT expr .
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr

    SUB  shift, and go to state 50
    MUL  shift, and go to state 51
    DIV  shift, and go to state 52
    REM  shift, and go to state 53
    ADD  shift, and go to state 56

    $default  reduce using rule 32 (expr)


State 70

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   24     | expr SUB expr .
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr

    MUL  shift, and go to state 51
    DIV  shift, and go to state 52
    REM  shift, and go to state 53

    $default  reduce using rule 24 (expr)


State 71

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   25     | expr MUL expr .
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr

    $default  reduce using rule 25 (expr)


State 72

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   26     | expr DIV expr .
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr

    $default  reduce using rule 26 (expr)


State 73

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   27     | expr REM expr .
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr

    $default  reduce using rule 27 (expr)


State 74

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr
   35     | expr OR expr .

    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    GT   shift, and go to state 48
    LT   shift, and go to state 49
    SUB  shift, and go to state 50
    MUL  shift, and go to state 51
    DIV  shift, and go to state 52
    REM  shift, and go to state 53
    AND  shift, and go to state 55
    ADD  shift, and go to state 56

    $default  reduce using rule 35 (expr)


State 75

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   34     | expr AND expr .
   35     | expr . OR expr

    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    GT   shift, and go to state 48
    LT   shift, and go to state 49
    SUB  shift, and go to state 50
    MUL  shift, and go to state 51
    DIV  shift, and go to state 52
    REM  shift, and go to state 53
    ADD  shift, and go to state 56

    $default  reduce using rule 34 (expr)


State 76

   23 expr: expr . ADD expr
   23     | expr ADD expr .
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr

    MUL  shift, and go to state 51
    DIV  shift, and go to state 52
    REM  shift, and go to state 53

    $default  reduce using rule 23 (expr)


State 77

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr
   40 assign_expr: left_val ASSIGN expr .

    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    GT   shift, and go to state 48
    LT   shift, and go to state 49
    SUB  shift, and go to state 50
    MUL  shift, and go to state 51
    DIV  shift, and go to state 52
    REM  shift, and go to state 53
    OR   shift, and go to state 54
    AND  shift, and go to state 55
    ADD  shift, and go to state 56

    $default  reduce using rule 40 (assign_expr)


State 78

   41 if_stmt: IF LPAREN expr RPAREN . statement

    T_CHAR      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_INT       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    IF          shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    SUB         shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    block        转到状态 18
    statement    转到状态 82
    declaration  转到状态 21
    T            转到状态 22
    expr         转到状态 23
    left_val     转到状态 24
    assign_expr  转到状态 25
    if_stmt      转到状态 26
    for_stmt     转到状态 27
    while_stmt   转到状态 28
    return_stmt  转到状态 29


State 79

   43 while_stmt: WHILE LPAREN expr RPAREN . statement

    T_CHAR      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_INT       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    IF          shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    SUB         shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    block        转到状态 18
    statement    转到状态 83
    declaration  转到状态 21
    T            转到状态 22
    expr         转到状态 23
    left_val     转到状态 24
    assign_expr  转到状态 25
    if_stmt      转到状态 26
    for_stmt     转到状态 27
    while_stmt   转到状态 28
    return_stmt  转到状态 29


State 80

   42 for_stmt: FOR LPAREN expr SEMICOLON . expr SEMICOLON expr RPAREN statement

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 84


State 81

   14 declaration: T IDENTIFIER ASSIGN expr .
   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr

    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    GT   shift, and go to state 48
    LT   shift, and go to state 49
    SUB  shift, and go to state 50
    MUL  shift, and go to state 51
    DIV  shift, and go to state 52
    REM  shift, and go to state 53
    OR   shift, and go to state 54
    AND  shift, and go to state 55
    ADD  shift, and go to state 56

    $default  reduce using rule 14 (declaration)


State 82

   41 if_stmt: IF LPAREN expr RPAREN statement .

    $default  reduce using rule 41 (if_stmt)


State 83

   43 while_stmt: WHILE LPAREN expr RPAREN statement .

    $default  reduce using rule 43 (while_stmt)


State 84

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr
   42 for_stmt: FOR LPAREN expr SEMICOLON expr . SEMICOLON expr RPAREN statement

    SEMICOLON  shift, and go to state 85
    EQ         shift, and go to state 44
    NE         shift, and go to state 45
    GE         shift, and go to state 46
    LE         shift, and go to state 47
    GT         shift, and go to state 48
    LT         shift, and go to state 49
    SUB        shift, and go to state 50
    MUL        shift, and go to state 51
    DIV        shift, and go to state 52
    REM        shift, and go to state 53
    OR         shift, and go to state 54
    AND        shift, and go to state 55
    ADD        shift, and go to state 56


State 85

   42 for_stmt: FOR LPAREN expr SEMICOLON expr SEMICOLON . expr RPAREN statement

    IDENTIFIER  shift, and go to state 32
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    SUB         shift, and go to state 11
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    expr  转到状态 86


State 86

   23 expr: expr . ADD expr
   24     | expr . SUB expr
   25     | expr . MUL expr
   26     | expr . DIV expr
   27     | expr . REM expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . LE expr
   31     | expr . GE expr
   32     | expr . LT expr
   33     | expr . GT expr
   34     | expr . AND expr
   35     | expr . OR expr
   42 for_stmt: FOR LPAREN expr SEMICOLON expr SEMICOLON expr . RPAREN statement

    RPAREN  shift, and go to state 87
    EQ      shift, and go to state 44
    NE      shift, and go to state 45
    GE      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    LT      shift, and go to state 49
    SUB     shift, and go to state 50
    MUL     shift, and go to state 51
    DIV     shift, and go to state 52
    REM     shift, and go to state 53
    OR      shift, and go to state 54
    AND     shift, and go to state 55
    ADD     shift, and go to state 56


State 87

   42 for_stmt: FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN . statement

    T_CHAR      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_INT       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    CHAR        shift, and go to state 6
    STRING      shift, and go to state 7
    IF          shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    SUB         shift, and go to state 11
    WHILE       shift, and go to state 12
    FOR         shift, and go to state 13
    RETURN      shift, and go to state 14
    ADD         shift, and go to state 15
    NOT         shift, and go to state 16

    block        转到状态 18
    statement    转到状态 88
    declaration  转到状态 21
    T            转到状态 22
    expr         转到状态 23
    left_val     转到状态 24
    assign_expr  转到状态 25
    if_stmt      转到状态 26
    for_stmt     转到状态 27
    while_stmt   转到状态 28
    return_stmt  转到状态 29


State 88

   42 for_stmt: FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statement .

    $default  reduce using rule 42 (for_stmt)
